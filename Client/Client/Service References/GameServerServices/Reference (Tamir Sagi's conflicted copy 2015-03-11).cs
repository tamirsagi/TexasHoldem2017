//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.GameServerServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/TexasHoldemDBWCF")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pwdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalMoney {
            get {
                return this.TotalMoneyField;
            }
            set {
                if ((this.TotalMoneyField.Equals(value) != true)) {
                    this.TotalMoneyField = value;
                    this.RaisePropertyChanged("TotalMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pwd {
            get {
                return this.pwdField;
            }
            set {
                if ((object.ReferenceEquals(this.pwdField, value) != true)) {
                    this.pwdField = value;
                    this.RaisePropertyChanged("pwd");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServerServices.IGameServerServices")]
    public interface IGameServerServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServerServices/Login", ReplyAction="http://tempuri.org/IGameServerServices/LoginResponse")]
        Client.GameServerServices.Player Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServerServices/CreateNewTable", ReplyAction="http://tempuri.org/IGameServerServices/CreateNewTableResponse")]
        bool CreateNewTable(string TableName, int minAmount, int smallBlind, int BigBlind, int maxUsers, int adminID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameServerServices/JoinIntoTable", ReplyAction="http://tempuri.org/IGameServerServices/JoinIntoTableResponse")]
        bool JoinIntoTable(int tableID, string tableName, int playerID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServerServicesChannel : Client.GameServerServices.IGameServerServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServerServicesClient : System.ServiceModel.ClientBase<Client.GameServerServices.IGameServerServices>, Client.GameServerServices.IGameServerServices {
        
        public GameServerServicesClient() {
        }
        
        public GameServerServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameServerServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServerServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServerServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.GameServerServices.Player Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public bool CreateNewTable(string TableName, int minAmount, int smallBlind, int BigBlind, int maxUsers, int adminID) {
            return base.Channel.CreateNewTable(TableName, minAmount, smallBlind, BigBlind, maxUsers, adminID);
        }
        
        public bool JoinIntoTable(int tableID, string tableName, int playerID) {
            return base.Channel.JoinIntoTable(tableID, tableName, playerID);
        }
    }
}
